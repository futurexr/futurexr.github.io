<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://futurexr.github.io/blog</id>
    <title>XR BLOG Blog</title>
    <updated>2022-11-30T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://futurexr.github.io/blog"/>
    <subtitle>XR BLOG Blog</subtitle>
    <icon>https://futurexr.github.io/img/myfavicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[介绍篇-待补充]]></title>
        <id>intro</id>
        <link href="https://futurexr.github.io/blog/intro"/>
        <updated>2022-11-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[未完待续]]></summary>
        <content type="html"><![CDATA[<p>未完待续</p>]]></content>
        <author>
            <name>XR</name>
            <uri>https://github.com/futurexr</uri>
        </author>
        <author>
            <name>ohxinru</name>
            <uri>https://github.com/ohxinru</uri>
        </author>
        <category label="intro" term="intro"/>
        <category label="project" term="project"/>
        <category label="technology" term="technology"/>
        <category label="life" term="life"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[应用docusaurus及github-pages搭建网站]]></title>
        <id>build-website</id>
        <link href="https://futurexr.github.io/blog/build-website"/>
        <updated>2022-11-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[第一次接触GitHub，是因为公司准备出海，需要开源，这个时候作为项目经理的我就需要了解GitHub是个啥东西、别人是怎么做的、gitflow标准流程是怎样的，如何应用于我们的产研团队，我们产研团队的协作流程以及工具使用又需要作何改变，如何实操落地…]]></summary>
        <content type="html"><![CDATA[<p>第一次接触GitHub，是因为公司准备出海，需要开源，这个时候作为项目经理的我就需要了解GitHub是个啥东西、别人是怎么做的、gitflow标准流程是怎样的，如何应用于我们的产研团队，我们产研团队的协作流程以及工具使用又需要作何改变，如何实操落地…</p><p>第一次接触vscode，是因为公司出海前需要做文档网站，需要各部门非研发同学来落地内容创作，我来主导负责这个项目，这个时候最为困难的就是要了解创作的内容是如何编辑并且发布上线的（这里大佬已经将网站搭建好了，也提供了基础的代码教程，我这里重中之重就是搞定各部门各角色各环节的实际操作流程，指导都是小白的大家如何实操落地，高效保质发布上线）</p><p>作为一个纯技术小白，真的都得去搜去看去问，究竟这些都是个啥，头都大了~~</p><p>搞这些的过程中，便萌发了自己也要搞个网站的想法，将自己学到的了解到的想说的内容都沉淀到自己的网站上，与大家分享交流~当然，越是有难度越是有挑战性，越是想把它给搞下来~</p><h1>为何选用docusaurus及github-pages搭建网站？</h1><p>可能大家会疑惑，为何我要选用docusaurus及github pages来搭建网站呢？</p><p>哈哈哈，并没有选，理由很简单：我是小白，公司应用docusaurus来搭建的网站，刚好也是供于内容创作，而gitHub-pages又能够提供免费域名（域名指向某一个IP地址，即打开我个人网站要用的网址）</p><h1>那么作为小白的我，咋去搭建这个网站？</h1><p>作为小白，我究竟该如何下手呢？</p><p>搜了各方资料，发现对小白都很不友好啊，我也只能参考这参考那摸爬滚打的去落地了，期间真的遇到了超多问题，花费了超多时间，可能是因为我侧重于用gitpod来实现吧，不明问题贼多，建议还是用vscode来整。这个网站实际上是我第二个搭建的了，主要是为了写这篇教程，能让大家避免更多的坑。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="官方参考链接">官方参考链接<a class="hash-link" href="#官方参考链接" title="Direct link to heading">​</a></h2><ul><li><a href="https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site" target="_blank" rel="noopener noreferrer">github-pages建站流程</a></li><li><a href="https://docusaurus.io/zh-CN/docs/installation" target="_blank" rel="noopener noreferrer">docusaurus安装流程</a></li><li><a href="https://docusaurus.io/zh-CN/docs/deployment#deploying-to-github-pages" target="_blank" rel="noopener noreferrer">docusaurus部署流程</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第一步创建仓库及网站参考github-pages建站流程">第一步：创建仓库及网站，参考<a href="https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site" target="_blank" rel="noopener noreferrer">github-pages建站流程</a><a class="hash-link" href="#第一步创建仓库及网站参考github-pages建站流程" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="11-创建仓库">1.1 创建仓库<a class="hash-link" href="#11-创建仓库" title="Direct link to heading">​</a></h3><p>创建并登录GitHub账号，为网站创建公开仓库即public repository，仓库命名为<code>&lt;user&gt;.github.io</code>。</p><p><img loading="lazy" src="/assets/images/1.1-1-3ac6b74ccc24f21583c3c7684f7db916.PNG" width="1280" height="555" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/1.1-2-66540ad261ad177eebac568a0bbbe256.PNG" width="857" height="904" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/1.1-3-d9cb33e7e7c27cf883d9e9b42f41bcc5.PNG" width="1280" height="553" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="12-创建网站">1.2 创建网站<a class="hash-link" href="#12-创建网站" title="Direct link to heading">​</a></h3><p>点击“settings”，点击“Pages”，点击“Visite site”，便可跳转到个人网站：<a href="https://futurexr.github.io" target="_blank" rel="noopener noreferrer">https://futurexr.github.io</a>
，可以随时访问了，此时的网站内容只有创建仓库时填写的描述内容，并且存在创建仓库时勾选的readme文件里。那如何构造docusaurus形式的博客空间呢，还需进行下述步骤</p><p><img loading="lazy" src="/assets/images/1.2-1-6d7788368047568c8d117f2aa746f63e.JPEG" width="1280" height="547" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/1.2-2-e34b5801e2689da2e6c0363d109cc278.JPEG" width="1280" height="620" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/1.2-3-902dd770f48324c8f3ccd50ef8847681.PNG" width="1280" height="629" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/1.2-4-c7ad32af24630e0eaa959486b29beb35.PNG" width="1055" height="352" class="img_ev3q"></p><blockquote><p>补充：返回code主页，你会发现，多了Enviroments及其githup-pages。</p><p><img loading="lazy" src="/assets/images/1.2-5-5df4a2c3901c64e735a9f4c8a8ab6ec7.PNG" width="1280" height="602" class="img_ev3q"></p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="13-新建gh-pages分支并将其设置为部署分支">1.3 新建gh-pages分支，并将其设置为部署分支<a class="hash-link" href="#13-新建gh-pages分支并将其设置为部署分支" title="Direct link to heading">​</a></h3><p>上一步骤的创建网站，是将main分支默认为部署分支了的。为便于后续的部署，我这边将以main分支作为源分支，gh-pages分支作为部署分支。</p><p><img loading="lazy" src="/assets/images/1.3-1-2384ce1f4cdb0b091a854ca847aff259.JPEG" width="1280" height="655" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/1.3-2-7e38378bbb88bd0a110cf4c58fdfcc28.JPEG" width="1280" height="657" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第二步下载安装基础软件">第二步：下载安装基础软件<a class="hash-link" href="#第二步下载安装基础软件" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="21-下载安装nodejs-v1614-或以上版本">2.1 下载安装<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener noreferrer">Node.js</a> v16.14 或以上版本<a class="hash-link" href="#21-下载安装nodejs-v1614-或以上版本" title="Direct link to heading">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="22-下载安装visual-studio-code">2.2 下载安装<a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener noreferrer">Visual Studio Code</a><a class="hash-link" href="#22-下载安装visual-studio-code" title="Direct link to heading">​</a></h3><p><img loading="lazy" src="/assets/images/2.2-1-d8c9346fc1ffb0b3d58121a2ba04ef85.JPEG" width="1280" height="960" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="23-下载安装git">2.3 下载安装<a href="https://git-scm.com/downloads" target="_blank" rel="noopener noreferrer">GIT</a><a class="hash-link" href="#23-下载安装git" title="Direct link to heading">​</a></h3><p><img loading="lazy" src="/assets/images/2.3-1-0266e94f2c1343bc7e9e85e8d053cac1.JPEG" width="1274" height="965" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="24-下载安装github-desktop">2.4 下载安装<a href="https://desktop.github.com/" target="_blank" rel="noopener noreferrer">GitHub Desktop</a><a class="hash-link" href="#24-下载安装github-desktop" title="Direct link to heading">​</a></h3><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第三步安装docusaurus启动本地网站参考docusaurus安装流程">第三步：安装docusaurus，启动本地网站，参考<a href="https://docusaurus.io/zh-CN/docs/installation" target="_blank" rel="noopener noreferrer">docusaurus安装流程</a><a class="hash-link" href="#第三步安装docusaurus启动本地网站参考docusaurus安装流程" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="31-使用github登录vscode">3.1 使用GitHub登录vscode<a class="hash-link" href="#31-使用github登录vscode" title="Direct link to heading">​</a></h3><blockquote><p>这里涉及到github desktop、vscode、git、github的相互打通授权，这里就不赘述了。</p></blockquote><p><img loading="lazy" src="/assets/images/3.1-1-78852ffd0b03d6e5fb531265973716bc.PNG" width="1280" height="604" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="32-vscode打开teminal面板按docusaurus安装流程启动本地预览网站">3.2 vscode打开Teminal面板，按<a href="https://docusaurus.io/zh-CN/docs/installation" target="_blank" rel="noopener noreferrer">docusaurus安装流程</a>，启动本地预览网站<a class="hash-link" href="#32-vscode打开teminal面板按docusaurus安装流程启动本地预览网站" title="Direct link to heading">​</a></h3><p><img loading="lazy" src="/assets/images/3.2-1-742e06721b0159a7338ce170c3410d22.JPEG" width="1276" height="929" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/3.2-2-1ba1006b892e5c6951ffc3188cae13f4.JPEG" width="969" height="237" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/3.2.3-b2fb883bcd6a51398b67069ed6773a21.JPEG" width="1280" height="966" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/3.2.4-434a862df263faeab432d292dfbe9f9a.jpg" width="1280" height="953" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/3.2.5-f262b98ef805cc2bca23ae4a86eb0ecf.jpg" width="1280" height="668" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/3.2.6-e5b08c23b350988203a014a8d2357400.png" width="1280" height="652" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第四步部署到github-pages参考docusaurus部署流程">第四步：部署到GitHub Pages，参考<a href="https://docusaurus.io/zh-CN/docs/deployment#deploying-to-github-pages" target="_blank" rel="noopener noreferrer">docusaurus部署流程</a><a class="hash-link" href="#第四步部署到github-pages参考docusaurus部署流程" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="41-将docusaurus所有文件搬至根目录下">4.1 将docusaurus所有文件搬至根目录下<a class="hash-link" href="#41-将docusaurus所有文件搬至根目录下" title="Direct link to heading">​</a></h3><p>把XR文件夹里的文件全都搬到根目录下，然后再把XR文件夹去掉。（可以本地文件夹操作）</p><blockquote><p>我这里是因为把远程仓库拉到本地再初始化项目，造成docusaurus文件并不直接在根目录下，所以才多此步骤。如果你是直接本地初始化项目后再同步至远程仓库，那么就不需要操作此步骤啦。</p></blockquote><p><img loading="lazy" src="/assets/images/4.1-1-1ffd67e98500662d68b47ce0f9397c5b.png" width="1280" height="931" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="42-修改docusaurusconfigjs文件内容">4.2 修改<code>docusaurus.config.js</code>文件内容<a class="hash-link" href="#42-修改docusaurusconfigjs文件内容" title="Direct link to heading">​</a></h3><p><img loading="lazy" src="/assets/images/4.2-1-fbcea5e553143e8defbe916b837b9fe1.png" width="1280" height="970" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="43-添加githubworkflow文件夹githubworkflowsdeployyml文件内容githubworkflowstest-deployyml文件内容">4.3 添加<code>.github/workflow</code>文件夹+<code>.github/workflows/deploy.yml</code>文件内容+<code>.github/workflows/test-deploy.yml</code>文件内容<a class="hash-link" href="#43-添加githubworkflow文件夹githubworkflowsdeployyml文件内容githubworkflowstest-deployyml文件内容" title="Direct link to heading">​</a></h3><p><img loading="lazy" src="/assets/images/4.3-1-60931e2dd3d2388c8ddfed23f0f27aa8.png" width="1280" height="970" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="44-使用命令npm-run-build然后npm-run-serve看是否能够成功构建本地网站">4.4 使用命令npm run build，然后npm run serve看是否能够成功构建本地网站<a class="hash-link" href="#44-使用命令npm-run-build然后npm-run-serve看是否能够成功构建本地网站" title="Direct link to heading">​</a></h3><p><img loading="lazy" src="/assets/images/4.4-1-3d510194ca202c81c55864a630be8c70.png" width="1280" height="665" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="45-本地构建没有问题后将main分支代码推送至远程仓库">4.5 本地构建没有问题后，将main分支代码推送至远程仓库<a class="hash-link" href="#45-本地构建没有问题后将main分支代码推送至远程仓库" title="Direct link to heading">​</a></h3><p>这里我先提交commit，然后再使用命令<code>git push origin main</code>推送至远程仓库。</p><blockquote><p>不明原因：直接git push不行，手动commit+手动sycn不行</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="46-切换至gh-pages分支将main分支合并至gh-pages分支并将gh-pages分支推送至远程仓库打开网址看效果">4.6 切换至gh-pages分支，将main分支合并至gh-pages分支并将gh-pages分支推送至远程仓库，打开网址看效果<a class="hash-link" href="#46-切换至gh-pages分支将main分支合并至gh-pages分支并将gh-pages分支推送至远程仓库打开网址看效果" title="Direct link to heading">​</a></h3><p>这里使用到命令：<code>git switch gh-pages</code>+<code>git merge main</code>+<code>git push origin gh-pages</code>，原以为这是报错有问题，后来打开网址<a href="https://futurexr.github.io" target="_blank" rel="noopener noreferrer">https://futurexr.github.io</a>
看到最终效果正常，终于搞定！！</p><p><img loading="lazy" src="/assets/images/4.6-1-f2f23e054394f0c5508a83c9f4abac66.jpg" width="1280" height="630" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/4.6-2-caf61bda94b54fb15b57ef45cc00051b.png" width="1280" height="648" class="img_ev3q"></p><blockquote><p>补充：回去GitHub看main与gh-pages分支代码，如下所示</p><p><img loading="lazy" src="/assets/images/4.6-3-91ca290cca5cb655c45f0ae3c7bffb53.png" width="1280" height="657" class="img_ev3q"></p><p><img loading="lazy" src="/assets/images/4.6-4-2d3bc19e01182978dfaf3696726bd281.png" width="1280" height="662" class="img_ev3q"></p></blockquote><p>至此，个人网站已经搭建完成，接下来就是该如何优化界面及输出文档内容啦✿✿ヽ(°▽°)ノ✿</p>]]></content>
        <author>
            <name>XR</name>
            <uri>https://github.com/futurexr</uri>
        </author>
        <category label="github" term="github"/>
        <category label="docusaurus" term="docusaurus"/>
        <category label="technology" term="technology"/>
    </entry>
</feed>